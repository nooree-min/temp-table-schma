---
name: 'github.com/liam-hq/liam/pull/1033'

assert:
- type: llm-rubric
  value: The report mentions about ensuring that this table is empty before the migration
- type: javascript
  # `feedbacks` Test 1: Check if the snippet has the exact correct file path
  value: |
    !!output.feedbacks.flatMap(feedback => feedback.suggestionSnippets).find(snippet => snippet.filename === "frontend/packages/db/prisma/migrations/20250328105323_add_branch_name_to_knowledge_suggestion/migration.sql")
- type: javascript
  # `feedbacks` Test 2: Check if the snippet suggests setting a DEFAULT value for the branchName column
  value: |
    !!output.feedbacks.flatMap(feedback => feedback.suggestionSnippets).find(snippet => snippet.snippet.includes("ALTER TABLE \"KnowledgeSuggestion\" ADD COLUMN \"branchName\" TEXT NOT NULL DEFAULT '"))
- type: javascript
  # `bodyMarkdown` Test 1: Check if the bodyMarkdown sentence is less than or equal to 3
  value: |
    output.bodyMarkdown.split(". ").length <= 3
- type: javascript
  # `bodyMarkdown` Test 2: Check if the bodyMarkdown word count is approximately less than or equal to 80
  value: |
    output.bodyMarkdown.split(" ").length <= 80

vars:
  prDescription: ''
  prComments: ''
  docsContent: ''
  schema: |-
    {
      "tables": {
        "Doc": {
          "name": "Doc",
          "columns": {
            "id": {
              "name": "id",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "title": {
              "name": "title",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "content": {
              "name": "content",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "latestVersionId": {
              "name": "latestVersionId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": false,
              "comment": null
            },
            "projectId": {
              "name": "projectId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "createdAt": {
              "name": "createdAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "updatedAt": {
              "name": "updatedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {},
          "constraints": {}
        },
        "DocVersion": {
          "name": "DocVersion",
          "columns": {
            "id": {
              "name": "id",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "docId": {
              "name": "docId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "version": {
              "name": "version",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "content": {
              "name": "content",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "createdAt": {
              "name": "createdAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "title": {
              "name": "title",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {
            "DocVersion_docId_version_key": {
              "name": "DocVersion_docId_version_key",
              "unique": true,
              "columns": [
                "docId",
                "version"
              ],
              "type": "btree"
            }
          },
          "constraints": {}
        },
        "GitHubDocFilePath": {
          "name": "GitHubDocFilePath",
          "columns": {
            "id": {
              "name": "id",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "path": {
              "name": "path",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "isReviewEnabled": {
              "name": "isReviewEnabled",
              "type": "bool",
              "default": true,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "projectId": {
              "name": "projectId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "createdAt": {
              "name": "createdAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "updatedAt": {
              "name": "updatedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {
            "GitHubDocFilePath_path_projectId_key": {
              "name": "GitHubDocFilePath_path_projectId_key",
              "unique": true,
              "columns": [
                "path",
                "projectId"
              ],
              "type": "btree"
            }
          },
          "constraints": {}
        },
        "KnowledgeSuggestion": {
          "name": "KnowledgeSuggestion",
          "columns": {
            "id": {
              "name": "id",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "type": {
              "name": "type",
              "type": "publicKnowledgeType",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "title": {
              "name": "title",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "path": {
              "name": "path",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "content": {
              "name": "content",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "fileSha": {
              "name": "fileSha",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "projectId": {
              "name": "projectId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "approvedAt": {
              "name": "approvedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": false,
              "comment": null
            },
            "createdAt": {
              "name": "createdAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "updatedAt": {
              "name": "updatedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "branchName": {
              "name": "branchName",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {},
          "constraints": {}
        },
        "Migration": {
          "name": "Migration",
          "columns": {
            "id": {
              "name": "id",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "title": {
              "name": "title",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "pullRequestId": {
              "name": "pullRequestId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "createdAt": {
              "name": "createdAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "updatedAt": {
              "name": "updatedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {
            "Migration_pullRequestId_key": {
              "name": "Migration_pullRequestId_key",
              "unique": true,
              "columns": [
                "pullRequestId"
              ],
              "type": "btree"
            }
          },
          "constraints": {}
        },
        "OverallReview": {
          "name": "OverallReview",
          "columns": {
            "id": {
              "name": "id",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "projectId": {
              "name": "projectId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": false,
              "comment": null
            },
            "pullRequestId": {
              "name": "pullRequestId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "reviewComment": {
              "name": "reviewComment",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": false,
              "comment": null
            },
            "reviewedAt": {
              "name": "reviewedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "createdAt": {
              "name": "createdAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "updatedAt": {
              "name": "updatedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "branchName": {
              "name": "branchName",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {},
          "constraints": {}
        },
        "Project": {
          "name": "Project",
          "columns": {
            "id": {
              "name": "id",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "name": {
              "name": "name",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "createdAt": {
              "name": "createdAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "updatedAt": {
              "name": "updatedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {},
          "constraints": {}
        },
        "ProjectRepositoryMapping": {
          "name": "ProjectRepositoryMapping",
          "columns": {
            "id": {
              "name": "id",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "projectId": {
              "name": "projectId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "repositoryId": {
              "name": "repositoryId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "createdAt": {
              "name": "createdAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "updatedAt": {
              "name": "updatedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {
            "ProjectRepositoryMapping_projectId_repositoryId_key": {
              "name": "ProjectRepositoryMapping_projectId_repositoryId_key",
              "unique": true,
              "columns": [
                "projectId",
                "repositoryId"
              ],
              "type": "btree"
            }
          },
          "constraints": {}
        },
        "PullRequest": {
          "name": "PullRequest",
          "columns": {
            "id": {
              "name": "id",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "pullNumber": {
              "name": "pullNumber",
              "type": "int8",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "commentId": {
              "name": "commentId",
              "type": "int8",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": false,
              "comment": null
            },
            "createdAt": {
              "name": "createdAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "updatedAt": {
              "name": "updatedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "repositoryId": {
              "name": "repositoryId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {
            "PullRequest_repositoryId_pullNumber_key": {
              "name": "PullRequest_repositoryId_pullNumber_key",
              "unique": true,
              "columns": [
                "repositoryId",
                "pullNumber"
              ],
              "type": "btree"
            }
          },
          "constraints": {}
        },
        "Repository": {
          "name": "Repository",
          "columns": {
            "id": {
              "name": "id",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "name": {
              "name": "name",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "owner": {
              "name": "owner",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "installationId": {
              "name": "installationId",
              "type": "int8",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "isActive": {
              "name": "isActive",
              "type": "bool",
              "default": true,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "createdAt": {
              "name": "createdAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "updatedAt": {
              "name": "updatedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {
            "Repository_owner_name_key": {
              "name": "Repository_owner_name_key",
              "unique": true,
              "columns": [
                "owner",
                "name"
              ],
              "type": "btree"
            }
          },
          "constraints": {}
        },
        "WatchSchemaFilePattern": {
          "name": "WatchSchemaFilePattern",
          "columns": {
            "id": {
              "name": "id",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "pattern": {
              "name": "pattern",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "projectId": {
              "name": "projectId",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "createdAt": {
              "name": "createdAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "updatedAt": {
              "name": "updatedAt",
              "type": "timestamp",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {},
          "constraints": {}
        },
        "_prisma_migrations": {
          "name": "_prisma_migrations",
          "columns": {
            "id": {
              "name": "id",
              "type": "varchar",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "checksum": {
              "name": "checksum",
              "type": "varchar",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "finished_at": {
              "name": "finished_at",
              "type": "timestamptz",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": false,
              "comment": null
            },
            "migration_name": {
              "name": "migration_name",
              "type": "varchar",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "logs": {
              "name": "logs",
              "type": "text",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": false,
              "comment": null
            },
            "rolled_back_at": {
              "name": "rolled_back_at",
              "type": "timestamptz",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": false,
              "comment": null
            },
            "started_at": {
              "name": "started_at",
              "type": "timestamptz",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            },
            "applied_steps_count": {
              "name": "applied_steps_count",
              "type": "int4",
              "default": null,
              "check": null,
              "primary": false,
              "unique": false,
              "notNull": true,
              "comment": null
            }
          },
          "comment": null,
          "indexes": {},
          "constraints": {}
        }
      },
      "relationships": {
        "DocVersion_docId_fkey": {
          "name": "DocVersion_docId_fkey",
          "primaryTableName": "Doc",
          "primaryColumnName": "id",
          "foreignTableName": "DocVersion",
          "foreignColumnName": "docId",
          "cardinality": "ONE_TO_MANY",
          "updateConstraint": "CASCADE",
          "deleteConstraint": "RESTRICT"
        },
        "Doc_projectId_fkey": {
          "name": "Doc_projectId_fkey",
          "primaryTableName": "Project",
          "primaryColumnName": "id",
          "foreignTableName": "Doc",
          "foreignColumnName": "projectId",
          "cardinality": "ONE_TO_MANY",
          "updateConstraint": "CASCADE",
          "deleteConstraint": "RESTRICT"
        },
        "GitHubDocFilePath_projectId_fkey": {
          "name": "GitHubDocFilePath_projectId_fkey",
          "primaryTableName": "Project",
          "primaryColumnName": "id",
          "foreignTableName": "GitHubDocFilePath",
          "foreignColumnName": "projectId",
          "cardinality": "ONE_TO_MANY",
          "updateConstraint": "CASCADE",
          "deleteConstraint": "RESTRICT"
        },
        "KnowledgeSuggestion_projectId_fkey": {
          "name": "KnowledgeSuggestion_projectId_fkey",
          "primaryTableName": "Project",
          "primaryColumnName": "id",
          "foreignTableName": "KnowledgeSuggestion",
          "foreignColumnName": "projectId",
          "cardinality": "ONE_TO_MANY",
          "updateConstraint": "CASCADE",
          "deleteConstraint": "RESTRICT"
        },
        "Migration_pullRequestId_fkey": {
          "name": "Migration_pullRequestId_fkey",
          "primaryTableName": "PullRequest",
          "primaryColumnName": "id",
          "foreignTableName": "Migration",
          "foreignColumnName": "pullRequestId",
          "cardinality": "ONE_TO_MANY",
          "updateConstraint": "CASCADE",
          "deleteConstraint": "RESTRICT"
        },
        "OverallReview_projectId_fkey": {
          "name": "OverallReview_projectId_fkey",
          "primaryTableName": "Project",
          "primaryColumnName": "id",
          "foreignTableName": "OverallReview",
          "foreignColumnName": "projectId",
          "cardinality": "ONE_TO_MANY",
          "updateConstraint": "CASCADE",
          "deleteConstraint": "SET_NULL"
        },
        "OverallReview_pullRequestId_fkey": {
          "name": "OverallReview_pullRequestId_fkey",
          "primaryTableName": "PullRequest",
          "primaryColumnName": "id",
          "foreignTableName": "OverallReview",
          "foreignColumnName": "pullRequestId",
          "cardinality": "ONE_TO_MANY",
          "updateConstraint": "CASCADE",
          "deleteConstraint": "RESTRICT"
        },
        "ProjectRepositoryMapping_projectId_fkey": {
          "name": "ProjectRepositoryMapping_projectId_fkey",
          "primaryTableName": "Project",
          "primaryColumnName": "id",
          "foreignTableName": "ProjectRepositoryMapping",
          "foreignColumnName": "projectId",
          "cardinality": "ONE_TO_MANY",
          "updateConstraint": "CASCADE",
          "deleteConstraint": "RESTRICT"
        },
        "ProjectRepositoryMapping_repositoryId_fkey": {
          "name": "ProjectRepositoryMapping_repositoryId_fkey",
          "primaryTableName": "Repository",
          "primaryColumnName": "id",
          "foreignTableName": "ProjectRepositoryMapping",
          "foreignColumnName": "repositoryId",
          "cardinality": "ONE_TO_MANY",
          "updateConstraint": "CASCADE",
          "deleteConstraint": "RESTRICT"
        },
        "PullRequest_repositoryId_fkey": {
          "name": "PullRequest_repositoryId_fkey",
          "primaryTableName": "Repository",
          "primaryColumnName": "id",
          "foreignTableName": "PullRequest",
          "foreignColumnName": "repositoryId",
          "cardinality": "ONE_TO_MANY",
          "updateConstraint": "CASCADE",
          "deleteConstraint": "RESTRICT"
        },
        "WatchSchemaFilePattern_projectId_fkey": {
          "name": "WatchSchemaFilePattern_projectId_fkey",
          "primaryTableName": "Project",
          "primaryColumnName": "id",
          "foreignTableName": "WatchSchemaFilePattern",
          "foreignColumnName": "projectId",
          "cardinality": "ONE_TO_MANY",
          "updateConstraint": "CASCADE",
          "deleteConstraint": "RESTRICT"
        }
      },
      "tableGroups": {
        "Github": {
          "name": "Github",
          "tables": [
            "Repository",
            "PullRequest",
            "ProjectRepositoryMapping",
            "GitHubDocFilePath"
          ],
          "comment": "Tables related to Github"
        }
      }
    }

  fileChanges:
  - filename: frontend/apps/app/features/projects/actions/approveKnowledgeSuggestion.ts
    status: modified
    changes: 13
    patch: "@@ -18,7 +18,6 @@ const formDataSchema = v.object({\n     v.string(),\n
      \    v.transform((value) => Number(value)),\n   ),\n-  branch: v.string(),\n
      })\n \n export const approveKnowledgeSuggestion = async (formData: FormData)
      => {\n@@ -28,7 +27,6 @@ export const approveKnowledgeSuggestion = async (formData:
      FormData) => {\n     repositoryOwner: formData.get('repositoryOwner'),\n     repositoryName:
      formData.get('repositoryName'),\n     installationId: formData.get('installationId'),\n-
      \   branch: formData.get('branch') ?? 'tmp-knowledge-suggestion',\n   }\n \n
      \  const parsedData = v.safeParse(formDataSchema, formDataObject)\n@@ -37,13
      +35,8 @@ export const approveKnowledgeSuggestion = async (formData: FormData)
      => {\n     throw new Error(`Invalid form data: ${JSON.stringify(parsedData.issues)}`)\n
      \  }\n \n-  const {\n-    suggestionId,\n-    repositoryOwner,\n-    repositoryName,\n-
      \   installationId,\n-    branch,\n-  } = parsedData.output\n+  const { suggestionId,
      repositoryOwner, repositoryName, installationId } =\n+    parsedData.output\n
      \n   try {\n     // Get the knowledge suggestion\n@@ -66,7 +59,7 @@ export const
      approveKnowledgeSuggestion = async (formData: FormData) => {\n       suggestion.fileSha,\n
      \      suggestion.title, // Use title as commit message\n       installationId,\n-
      \     branch,\n+      suggestion.branchName,\n     )\n \n     if (!success)
      {"
  - filename: frontend/packages/db/prisma/migrations/20250328105323_add_branch_name_to_knowledge_suggestion/migration.sql
    status: added
    changes: 8
    patch: |-
      @@ -0,0 +1,8 @@
      +/*
      +  Warnings:
      +
      +  - Added the required column `branchName` to the `KnowledgeSuggestion` table without a default value. This is not possible if the table is not empty.
      +
      +*/
      +-- AlterTable
      +ALTER TABLE "KnowledgeSuggestion" ADD COLUMN     "branchName" TEXT NOT NULL;
  - filename: frontend/packages/db/prisma/schema.prisma
    status: modified
    changes: 1
    patch: |-
      @@ -131,6 +131,7 @@ model KnowledgeSuggestion {
         path           String        // Target file path
         content        String        // Full content of the new file
         fileSha        String        // SHA of the file to be updated
      +  branchName     String        // Branch name for GitHub operations
         projectId      Int
         project        Project       @relation(fields: [projectId], references: [id])
         approvedAt     DateTime?     // Approval timestamp (null if not approved)
  - filename: frontend/packages/db/schema/schema.sql
    status: modified
    changes: 3
    patch: "@@ -158,7 +158,8 @@ CREATE TABLE public.\"KnowledgeSuggestion\" (\n     \"projectId\"
      integer NOT NULL,\n     \"approvedAt\" timestamp(3) without time zone,\n     \"createdAt\"
      timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n-    \"updatedAt\"
      timestamp(3) without time zone NOT NULL\n+    \"updatedAt\" timestamp(3) without
      time zone NOT NULL,\n+    \"branchName\" text NOT NULL\n );\n \n "
  - filename: frontend/packages/db/supabase/database.types.ts
    status: modified
    changes: 3
    patch: |-
      @@ -178,6 +178,7 @@ export type Database = {
             KnowledgeSuggestion: {
               Row: {
                 approvedAt: string | null
      +          branchName: string
                 content: string
                 createdAt: string
                 fileSha: string
      @@ -190,6 +191,7 @@ export type Database = {
               }
               Insert: {
                 approvedAt?: string | null
      +          branchName: string
                 content: string
                 createdAt?: string
                 fileSha: string
      @@ -202,6 +204,7 @@ export type Database = {
               }
               Update: {
                 approvedAt?: string | null
      +          branchName?: string
                 content?: string
                 createdAt?: string
                 fileSha?: string
  - filename: frontend/packages/db/supabase/migrations/20250328105339_add_branch_name_to_knowledge_suggestion.sql
    status: added
    changes: 1
    patch: |-
      @@ -0,0 +1 @@
      +alter table "public"."KnowledgeSuggestion" add column "branchName" text not null;
  - filename: frontend/packages/github/src/api.server.ts
    status: modified
    changes: 2
    patch: "@@ -181,7 +181,7 @@ export const updateFileContent = async (\n   sha:
      string,\n   message: string,\n   installationId: number,\n-  branch = 'tmp-knowledge-suggestion',\n+
      \ branch: string,\n ): Promise<boolean> => {\n   const [owner, repo] = repositoryFullName.split('/')\n "
  - filename: frontend/packages/jobs/src/functions/processCreateKnowledgeSuggestion.ts
    status: modified
    changes: 1
    patch: "@@ -77,6 +77,7 @@ export const processCreateKnowledgeSuggestion = async
      (\n       content,\n       fileSha,\n       projectId,\n+      branchName: branch,\n
      \    },\n   })\n "
  - filename: memory-bank/progress.md
    status: modified
    changes: 3
    patch: "@@ -11,6 +11,7 @@\n - Text document viewer page that renders raw text
      content from GitHub repositories.\n - Documentation list page that displays
      all GitHubDocFilePath entries for a project with links to individual document
      pages.\n - Supabase JS integration for database access in the document viewer
      page, with optimized queries using nested joins.\n+- Dynamic branch name management
      for KnowledgeSuggestion operations, replacing hardcoded branch names.\n \n ##
      What's Left to Build\n \n@@ -27,7 +28,7 @@ The project is currently focused
      on enhancing the Reviewer User experience, with\n \n The core review pipeline
      is now operational, connecting GitHub webhooks to AI-powered review generation
      and PR comment posting. This enables automatic review of database schema changes
      when pull requests are opened or updated.\n \n-The KnowledgeSuggestion feature
      is being implemented to allow AI-generated suggestions for Schema and Docs updates.
      The database model has been created, which will store suggestions that can be
      approved and then committed to GitHub using the GitHub API.\n+The KnowledgeSuggestion
      feature is being implemented to allow AI-generated suggestions for Schema and
      Docs updates. The database model has been created, which will store suggestions
      that can be approved and then committed to GitHub using the GitHub API. Recent
      improvements include adding a branchName column to the KnowledgeSuggestion table
      to replace hardcoded branch names with dynamic ones, making the system more
      flexible and maintainable.\n \n A new text document viewer page has been implemented
      at `/app/projects/[projectId]/docs/[branchOrCommit]/[...slug]` that fetches
      and displays raw text content from GitHub repositories. This page uses Supabase
      JS for database access instead of Prisma, demonstrating the flexibility of our
      data access layer. The implementation uses a single optimized query with nested
      joins to efficiently retrieve all necessary data. This serves as a prototype
      for the planned migration from Prisma to Supabase JS across the entire application.\n "
